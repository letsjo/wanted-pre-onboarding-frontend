{"version":3,"file":"static/js/843.40dd895e.chunk.js","mappings":"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","sources":["apis/userClient.jsx","components/layout/public/Input/style.jsx","components/layout/public/Input/index.jsx","hooks/useRedirect.jsx","styles/modules.js","components/layout/todo/Header/style.jsx","components/layout/todo/Header/index.jsx","components/layout/todo/CardCreate/style.jsx","components/layout/public/SmallButton/style.jsx","components/layout/public/SmallButton/index.jsx","apis/todo.jsx","context/TodoReducer.jsx","context/TodoProvider.jsx","components/layout/todo/CardCreate/index.jsx","components/layout/todo/Card/style.jsx","components/layout/todo/CardDisplay/style.jsx","components/layout/todo/CardDisplay/index.jsx","components/layout/todo/CardModify/style.jsx","components/layout/todo/CardModify/index.jsx","components/layout/todo/Card/index.jsx","components/layout/todo/ListSection/style.jsx","components/layout/todo/ListSection/index.jsx","pages/Todo.jsx"],"sourcesContent":["import axios from 'axios';\r\n\r\nexport const userClient = axios.create({\r\n  baseURL: process.env.REACT_APP_API_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\nuserClient.interceptors.request.use((config) => {\r\n  const accessToken = localStorage.getItem('access_token');\r\n\r\n  if (accessToken && config.headers) {\r\n    config.headers['Authorization'] = `Bearer ${accessToken}`;\r\n  }\r\n  return config;\r\n});\r\n","import styled from 'styled-components';\r\n\r\nexport const Styled = {\r\n  Input: styled.input`\r\n    width: 100%;\r\n    padding: 10px;\r\n    box-sizing: border-box;\r\n    margin: 10px 0px;\r\n    border: none;\r\n    border-bottom: 2px solid #adadad;\r\n    font-size: 16px;\r\n    outline: none;\r\n    :focus {\r\n      border-bottom: 2px solid #333;\r\n    }\r\n  `,\r\n};\r\n","import { Styled } from './style';\r\n\r\nconst Input = ({ InputData }) => {\r\n  const {\r\n    type,\r\n    placeholder,\r\n    testId,\r\n    onChange,\r\n    autoComplete,\r\n    defaultValue,\r\n    inputRef,\r\n  } = InputData;\r\n  return (\r\n    <Styled.Input\r\n      data-testid={testId}\r\n      type={type}\r\n      placeholder={placeholder}\r\n      defaultValue={defaultValue}\r\n      onChange={onChange}\r\n      autoComplete={autoComplete}\r\n      ref={inputRef}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import { useEffect } from 'react';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\n\r\nconst useRedirect = () => {\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const accessToken = localStorage.getItem('access_token');\r\n\r\n  useEffect(() => {\r\n    if (accessToken === null && location.pathname === '/todo')\r\n      return navigate('/');\r\n    if (accessToken !== null && location.pathname !== '/todo')\r\n      return navigate('/todo');\r\n  }, []);\r\n};\r\n\r\nexport default useRedirect;\r\n","import { css } from \"styled-components\";\r\n\r\nexport const flexBox = ({\r\n  dir = \"row\",\r\n  content = \"baseline\",\r\n  items = \"baseline\",\r\n}) => css`\r\n  display: flex;\r\n  flex-direction: ${dir};\r\n  justify-content: ${content};\r\n  align-items: ${items};\r\n`;\r\n\r\nexport const flexCenter = (dir = \"row\") =>\r\n  css`\r\n  display: flex;\r\n  flex-direction: ${dir};\r\n  justify-content: center;\r\n  align-items: center;\r\n`;","import styled from 'styled-components';\r\nimport { flexBox, flexCenter } from 'styles/modules';\r\n\r\nexport const Styled = {\r\n  Container: styled.div`\r\n    ${flexBox({ content: 'space-between', items: 'center' })}\r\n    margin: 0px 50px;\r\n    padding-top: 30px;\r\n    padding-bottom: 20px;\r\n    width: 80%;\r\n    border-bottom: 1px solid #e5e5e5;\r\n  `,\r\n  Title: styled.div`\r\n    font-size: 30px;\r\n    font-weight: bold;\r\n  `,\r\n  Button: styled.button`\r\n    ${flexCenter('row')}\r\n    background-color: #4a4a4a;\r\n    color: #fff;\r\n    font-size: 16px;\r\n    font-weight: bold;\r\n    border: none;\r\n    padding: 12px;\r\n    border-radius: 5px;\r\n    :hover {\r\n      background-color: #616161;\r\n    }\r\n  `,\r\n};\r\n","import { useNavigate } from 'react-router-dom';\r\nimport { Styled } from './style';\r\n\r\nconst Header = () => {\r\n  const navigator = useNavigate();\r\n  const onLogout = () => {\r\n    localStorage.removeItem('access_token');\r\n    navigator('/');\r\n  };\r\n\r\n  return (\r\n    <Styled.Container>\r\n      <Styled.Title>To Do List</Styled.Title>\r\n      <Styled.Button onClick={onLogout}>로그아웃</Styled.Button>\r\n    </Styled.Container>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import styled from 'styled-components';\r\nimport { flexCenter } from 'styles/modules';\r\n\r\nexport const Styled = {\r\n  Container: styled.form`\r\n    ${flexCenter('row')}\r\n    width: 80%;\r\n    margin-top: 5px;\r\n  `,\r\n};\r\n","import styled from 'styled-components';\r\nimport { flexCenter } from 'styles/modules';\r\n\r\nexport const Styled = {\r\n  Button: styled.button`\r\n    ${flexCenter()}\r\n    border: none;\r\n    font-size: 16px;\r\n    font-weight: bold;\r\n    padding: 10px;\r\n    width: 20%;\r\n    margin: 10px 0px 10px 5px;\r\n    cursor: pointer;\r\n    background-color: #565656;\r\n    color: #fff;\r\n    border-radius: 5px;\r\n    :hover {\r\n      background-color: #6e6e6e;\r\n    }\r\n  `,\r\n};\r\n","import { Styled } from './style';\r\n\r\nconst SmallButton = ({ ButtonData }) => {\r\n  const { text, testId, handleClick, data } = ButtonData;\r\n  return (\r\n    <Styled.Button\r\n      data-testid={testId}\r\n      onClick={(e) => handleClick({ e, data })}\r\n    >\r\n      {text}\r\n    </Styled.Button>\r\n  );\r\n};\r\n\r\nexport default SmallButton;\r\n","import { userClient } from 'apis/userClient';\r\n\r\nexport const getTodoApi = () => {\r\n  return userClient.get('/todos');\r\n};\r\n\r\nexport const createTodoApi = ({ todo }) => {\r\n  return userClient.post('/todos', { todo });\r\n};\r\n\r\nexport const updateTodoApi = ({ id, todo, isCompleted }) => {\r\n  return userClient.put(`/todos/${id}`, { todo, isCompleted });\r\n};\r\n\r\nexport const deleteTodoApi = ({ id }) => {\r\n  return userClient.delete(`/todos/${id}`);\r\n};\r\n","const todoReducer = (state, action) => {\r\n  console.log(state, action);\r\n  switch (action.type) {\r\n    case 'GET':\r\n      return [...action.payload];\r\n    case 'CREATE':\r\n      return [...state, action.payload];\r\n    case 'DELETE':\r\n      return state.filter((task) => task.id !== action.payload.id);\r\n    case 'UPDATE':\r\n      return state.map((task) =>\r\n        task.id === action.payload.id ? { ...action.payload } : task,\r\n      );\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default todoReducer;\r\n","import { createContext, useReducer } from 'react';\r\nimport todoReducer from './TodoReducer';\r\n\r\nexport const dispatchContext = createContext('');\r\nexport const todoContext = createContext('');\r\n\r\nconst initialState = [];\r\n\r\nexport default function TodoProvider(props) {\r\n  const [todos, dispatch] = useReducer(todoReducer, initialState);\r\n\r\n  return (\r\n    <todoContext.Provider value={todos}>\r\n      <dispatchContext.Provider value={dispatch}>\r\n        {props.children}\r\n      </dispatchContext.Provider>\r\n    </todoContext.Provider>\r\n  );\r\n}\r\n","import Input from 'components/layout/public/Input';\r\nimport { Styled } from './style';\r\nimport SmallButton from 'components/layout/public/SmallButton';\r\nimport { useContext, useRef, useState } from 'react';\r\nimport { createTodoApi } from 'apis/todo';\r\nimport { dispatchContext } from 'context/TodoProvider';\r\n\r\nconst CardCreate = () => {\r\n  const dispatch = useContext(dispatchContext);\r\n  const inputRef = useRef();\r\n\r\n  const [todo, setTodo] = useState('');\r\n\r\n  const onChangeTodo = (e) => {\r\n    setTodo(e.target.value);\r\n  };\r\n\r\n  const handleCreate = ({ e }) => {\r\n    e.preventDefault();\r\n    if (todo.trim().length <= 0) return alert('공백은 추가 할 수 없습니다.');\r\n    if (typeof todo !== 'string') return alert('문자형만 추가할 수 있습니다.');\r\n    createTodoApi({ todo })\r\n      .then((res) => {\r\n        inputRef.current.value = '';\r\n        dispatch({ type: 'CREATE', payload: res.data });\r\n        alert('할 일이 추가되었습니다.');\r\n      })\r\n      .catch((error) => {\r\n        alert(\r\n          `추가에 실패하였습니다. \\nERROR : ${error.response.data.message}`,\r\n        );\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Styled.Container>\r\n      <Input\r\n        InputData={{\r\n          testId: 'new-todo-input',\r\n          type: 'text',\r\n          placeholder: '할 일을 적어주세요.',\r\n          defaultValue: todo,\r\n          onChange: onChangeTodo,\r\n          inputRef: inputRef,\r\n        }}\r\n      />\r\n      <SmallButton\r\n        ButtonData={{\r\n          text: '추가',\r\n          testId: 'new-todo-add-button',\r\n          handleClick: handleCreate,\r\n        }}\r\n      />\r\n    </Styled.Container>\r\n  );\r\n};\r\n\r\nexport default CardCreate;\r\n","import styled from 'styled-components';\r\n\r\nexport const Styled = {\r\n  Container: styled.li`\r\n    width: 100%;\r\n    border-bottom: 1px solid #dbdbdb;\r\n  `,\r\n};\r\n","import styled from 'styled-components';\r\nimport { flexCenter } from 'styles/modules';\r\n\r\nexport const Styled = {\r\n  DisplayWrap: styled.label`\r\n    ${flexCenter('row')}\r\n    width: 100%;\r\n  `,\r\n  CheckBox: styled.input`\r\n    margin: 10px 10px 10px 0px;\r\n    width: 30px;\r\n    height: 30px;\r\n    accent-color: #565656;\r\n  `,\r\n  TodoTitle: styled.span`\r\n    font-size: 18px;\r\n    font-weight: 400;\r\n    width: 80%;\r\n    margin: 10px 0px;\r\n  `,\r\n};\r\n","import { Styled } from './style';\r\nimport SmallButton from 'components/layout/public/SmallButton';\r\nimport { deleteTodoApi, updateTodoApi } from 'apis/todo';\r\nimport { useContext } from 'react';\r\nimport { dispatchContext } from 'context/TodoProvider';\r\n\r\nconst CardDisplay = ({ todoData, modify, setModify }) => {\r\n  const dispatch = useContext(dispatchContext);\r\n\r\n  const handleModify = () => {\r\n    setModify(true);\r\n  };\r\n\r\n  const handleIsCompleted = (e) => {\r\n    updateTodoApi({\r\n      id: todoData.id,\r\n      todo: todoData.todo,\r\n      isCompleted: e.target.checked,\r\n    })\r\n      .then((res) => {\r\n        dispatch({ type: 'UPDATE', payload: res.data });\r\n        e.target.checked\r\n          ? alert(`[${todoData.todo}] 를 완료했습니다.`)\r\n          : alert(`[${todoData.todo}] 를 시작해주세요!`);\r\n      })\r\n      .catch((error) => {\r\n        e.target.checked = todoData.isCompleted;\r\n        alert(\r\n          `완료 처리를 실패하였습니다. \\nERROR : ${error.response.data.message}`,\r\n        );\r\n      });\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    deleteTodoApi({ id: todoData.id })\r\n      .then((res) => {\r\n        console.log(res);\r\n        dispatch({ type: 'DELETE', payload: { id: todoData.id } });\r\n        alert('할 일이 삭제되었습니다.');\r\n      })\r\n      .catch((error) => {\r\n        alert(\r\n          `삭제 처리를 실패하였습니다.\\nERROR : ${error.response.data.message}`,\r\n        );\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Styled.DisplayWrap style={{ display: modify ? 'none' : 'flex' }}>\r\n      <Styled.CheckBox\r\n        type='checkbox'\r\n        defaultChecked={todoData.isCompleted}\r\n        onChange={(e) => handleIsCompleted(e)}\r\n      />\r\n      <Styled.TodoTitle\r\n        style={{\r\n          textDecorationLine: todoData.isCompleted ? 'line-through' : 'none',\r\n        }}\r\n      >\r\n        {todoData.todo}\r\n      </Styled.TodoTitle>\r\n      <SmallButton\r\n        ButtonData={{\r\n          text: '수정',\r\n          handleClick: handleModify,\r\n          testId: 'modify-button',\r\n        }}\r\n      />\r\n      <SmallButton\r\n        ButtonData={{\r\n          text: '삭제',\r\n          handleClick: handleDelete,\r\n          testId: 'delete-button',\r\n        }}\r\n      />\r\n    </Styled.DisplayWrap>\r\n  );\r\n};\r\n\r\nexport default CardDisplay;\r\n","import styled from 'styled-components';\r\nimport { flexCenter } from 'styles/modules';\r\n\r\nexport const Styled = {\r\n  ModifyWrap: styled.label`\r\n    ${flexCenter('row')}\r\n    width: 100%;\r\n  `,\r\n};\r\n","import { updateTodoApi } from 'apis/todo';\r\nimport { Styled } from './style';\r\nimport Input from 'components/layout/public/Input';\r\nimport SmallButton from 'components/layout/public/SmallButton';\r\nimport { useState, useContext, useRef } from 'react';\r\nimport { dispatchContext } from 'context/TodoProvider';\r\n\r\nconst CardModify = ({ todoData, modify, setModify }) => {\r\n  const dispatch = useContext(dispatchContext);\r\n  const inputRef = useRef();\r\n\r\n  const [modifyTodo, setModifyTodo] = useState(todoData.todo);\r\n\r\n  const handleUpdate = () => {\r\n    updateTodoApi({\r\n      id: todoData.id,\r\n      todo: modifyTodo,\r\n      isCompleted: todoData.isCompleted,\r\n    })\r\n      .then((res) => {\r\n        dispatch({ type: 'UPDATE', payload: res.data });\r\n        setModify(false);\r\n        alert('할 일이 수정되었습니다.');\r\n      })\r\n      .catch(() => {\r\n        setModify(false);\r\n        inputRef.current.value = todoData.todo;\r\n        alert('할 일 수정에 실패했습니다.');\r\n      });\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    inputRef.current.value = todoData.todo;\r\n    setModify(false);\r\n  };\r\n\r\n  const onChangeModify = (e) => {\r\n    setModifyTodo(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <Styled.ModifyWrap style={{ display: modify ? 'flex' : 'none' }}>\r\n      <Input\r\n        InputData={{\r\n          type: 'text',\r\n          testId: 'modify-input',\r\n          placeholder: '할 일을 적어주세요.',\r\n          onChange: onChangeModify,\r\n          defaultValue: modifyTodo,\r\n          inputRef: inputRef,\r\n        }}\r\n      />\r\n      <SmallButton\r\n        ButtonData={{\r\n          text: '제출',\r\n          testId: 'submit-button',\r\n          handleClick: handleUpdate,\r\n        }}\r\n      />\r\n      <SmallButton\r\n        ButtonData={{\r\n          text: '취소',\r\n          testId: 'cancel-button',\r\n          handleClick: handleCancel,\r\n        }}\r\n      />\r\n    </Styled.ModifyWrap>\r\n  );\r\n};\r\n\r\nexport default CardModify;\r\n","import { useState } from 'react';\r\nimport { Styled } from './style';\r\nimport CardDisplay from '../CardDisplay';\r\nimport CardModify from '../CardModify';\r\n\r\nconst Card = ({ todoData }) => {\r\n  const [modify, setModify] = useState(false);\r\n  return (\r\n    <Styled.Container>\r\n      <CardDisplay todoData={todoData} modify={modify} setModify={setModify} />\r\n      <CardModify todoData={todoData} modify={modify} setModify={setModify} />\r\n    </Styled.Container>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import styled from 'styled-components';\r\nimport { flexBox } from 'styles/modules';\r\n\r\nexport const Styled = {\r\n  Container: styled.ul`\r\n    ${flexBox({ dir: 'column', content: 'flex-start', items: 'center' })}\r\n    width: 80%;\r\n    height: 100%;\r\n    margin-bottom: 30px;\r\n    overflow: auto;\r\n  `,\r\n};\r\n","import { useEffect, useContext } from 'react';\r\nimport Card from '../Card';\r\nimport { Styled } from './style';\r\nimport { getTodoApi } from 'apis/todo';\r\nimport { todoContext, dispatchContext } from 'context/TodoProvider';\r\n\r\nconst ListSection = () => {\r\n  const todoList = useContext(todoContext);\r\n  const dispatch = useContext(dispatchContext);\r\n\r\n  useEffect(() => {\r\n    const getTodoList = () => {\r\n      getTodoApi()\r\n        .then((res) => {\r\n          dispatch({ type: 'GET', payload: res.data });\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    };\r\n    getTodoList();\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <Styled.Container>\r\n      {todoList &&\r\n        todoList.map((todoData) => (\r\n          <Card key={todoData.id} todoData={todoData} />\r\n        ))}\r\n    </Styled.Container>\r\n  );\r\n};\r\n\r\nexport default ListSection;\r\n","import styled from 'styled-components';\r\n\r\nimport useRedirect from 'hooks/useRedirect';\r\nimport Header from 'components/layout/todo/Header';\r\nimport CardCreate from 'components/layout/todo/CardCreate';\r\nimport ListSection from 'components/layout/todo/ListSection';\r\n\r\nimport TodoProvider from 'context/TodoProvider';\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  width: 500px;\r\n  height: 700px;\r\n  margin: 50px auto;\r\n  box-shadow: 0px 0px 10px 0px rgba(0, 0, 0, 0.2);\r\n  border-radius: 20px;\r\n`;\r\n\r\nconst Todo = () => {\r\n  useRedirect();\r\n\r\n  return (\r\n    <Container>\r\n      <Header />\r\n      <TodoProvider>\r\n        <CardCreate />\r\n        <ListSection />\r\n      </TodoProvider>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Todo;\r\n"],"names":["userClient","axios","baseURL","process","headers","interceptors","request","use","config","accessToken","localStorage","getItem","Styled","Input","styled","InputData","type","placeholder","testId","onChange","autoComplete","defaultValue","inputRef","ref","navigate","useNavigate","location","useLocation","useEffect","pathname","flexBox","dir","content","items","css","flexCenter","Container","Title","Button","navigator","onClick","removeItem","ButtonData","text","handleClick","data","e","updateTodoApi","id","todo","isCompleted","state","action","console","log","payload","filter","task","map","dispatchContext","createContext","todoContext","initialState","TodoProvider","props","useReducer","todoReducer","todos","dispatch","Provider","value","children","useContext","useRef","useState","setTodo","target","preventDefault","trim","length","alert","createTodoApi","then","res","current","catch","error","response","message","DisplayWrap","CheckBox","TodoTitle","todoData","modify","setModify","style","display","defaultChecked","checked","handleIsCompleted","textDecorationLine","deleteTodoApi","ModifyWrap","modifyTodo","setModifyTodo","todoList","err","useRedirect"],"sourceRoot":""}