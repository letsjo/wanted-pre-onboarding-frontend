{"version":3,"file":"static/js/97.f16fd750.chunk.js","mappings":"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","sources":["apis/sign.jsx","apis/userClient.jsx","components/layout/public/Input/style.jsx","components/layout/public/Input/index.jsx","components/layout/sign/Form/style.jsx","components/layout/sign/Button/style.jsx","components/layout/sign/Button/index.jsx","components/layout/sign/Toggle/style.jsx","components/layout/sign/Toggle/index.jsx","components/layout/sign/Form/index.jsx","utils/deepFreeze.jsx","constants/Message.jsx","hooks/useRedirect.jsx","pages/Join.jsx","../node_modules/@babel/runtime/helpers/esm/classPrivateFieldLooseBase.js","../node_modules/@babel/runtime/helpers/esm/classPrivateFieldLooseKey.js","utils/Validator.jsx","utils/handleError.jsx"],"sourcesContent":["import { userClient } from 'apis/userClient';\r\n\r\nexport const signInApi = ({ email, password }) => {\r\n  return userClient.post('/auth/signin', { email, password });\r\n};\r\n\r\nexport const signUpApi = ({ email, password }) => {\r\n  return userClient.post('/auth/signup', { email, password });\r\n};\r\n","import axios from 'axios';\r\n\r\nexport const userClient = axios.create({\r\n  baseURL: process.env.REACT_APP_API_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\nuserClient.interceptors.request.use((config) => {\r\n  const accessToken = localStorage.getItem('access_token');\r\n\r\n  if (accessToken && config.headers) {\r\n    config.headers['Authorization'] = `Bearer ${accessToken}`;\r\n  }\r\n  return config;\r\n});\r\n","import styled from 'styled-components';\r\n\r\nexport const Styled = {\r\n  Input: styled.input`\r\n    width: 100%;\r\n    padding: 10px;\r\n    box-sizing: border-box;\r\n    margin: 10px 0px;\r\n    border: none;\r\n    border-bottom: 2px solid #adadad;\r\n    font-size: 16px;\r\n    outline: none;\r\n    :focus {\r\n      border-bottom: 2px solid #333;\r\n    }\r\n  `,\r\n};\r\n","import { Styled } from './style';\r\n\r\nconst Input = ({ InputData }) => {\r\n  const {\r\n    type,\r\n    placeholder,\r\n    testId,\r\n    onChange,\r\n    autoComplete,\r\n    defaultValue,\r\n    inputRef,\r\n  } = InputData;\r\n  return (\r\n    <Styled.Input\r\n      data-testid={testId}\r\n      type={type}\r\n      placeholder={placeholder}\r\n      defaultValue={defaultValue}\r\n      onChange={onChange}\r\n      autoComplete={autoComplete}\r\n      ref={inputRef}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import styled from 'styled-components';\r\n\r\nexport const Styled = {\r\n  Form: styled.form`\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #fff;\r\n    padding: 60px 100px;\r\n    box-sizing: border-box;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    opacity: 1;\r\n  `,\r\n  Title: styled.div`\r\n    text-align: center;\r\n    margin-bottom: 40px;\r\n    font-size: 1.5rem;\r\n  `,\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const Styled = {\r\n  Button: styled.button`\r\n    width: 100%;\r\n    padding: 10px;\r\n    margin-top: 10px;\r\n    background-color: #4a4a4a;\r\n    color: #fff;\r\n    border: none;\r\n    border-radius: 25px;\r\n    font-size: 16px;\r\n    cursor: pointer;\r\n    outline-color: #333;\r\n    :hover {\r\n      background-color: #616161;\r\n    }\r\n    :disabled {\r\n      background-color: #adadad;\r\n      cursor: auto;\r\n    }\r\n  `,\r\n};\r\n","import { useEffect, useState } from 'react';\r\nimport { Styled } from './style';\r\nimport Validator from 'utils/Validator';\r\n\r\nconst Button = ({ ButtonData }) => {\r\n  const { text, testId, handleClick, userData } = ButtonData;\r\n  const [active, setActive] = useState(false);\r\n  useEffect(() => {\r\n    if (\r\n      Validator.hasEmailAtSign(userData.email) &&\r\n      Validator.hasPasswordMinimumLength(userData.password)\r\n    ) {\r\n      return setActive(true);\r\n    }\r\n\r\n    setActive(false);\r\n  }, [userData]);\r\n  return (\r\n    <Styled.Button\r\n      data-testid={testId}\r\n      onClick={(e) => handleClick(e, userData)}\r\n      disabled={active ? false : true}\r\n    >\r\n      {text}\r\n    </Styled.Button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import styled from 'styled-components';\r\n\r\nexport const Styled = {\r\n  Toggle: styled.div`\r\n    position: absolute;\r\n    bottom: 90px;\r\n    right: 60px;\r\n    color: #333;\r\n    cursor: pointer;\r\n    font-size: 0.9rem;\r\n    :hover {\r\n      text-decoration: underline;\r\n    }\r\n  `,\r\n};\r\n","import React from 'react';\r\nimport { Styled } from './style';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst Toggle = ({ ToggleData }) => {\r\n  const { text, handleNavigate } = ToggleData;\r\n  const navigate = useNavigate();\r\n  return (\r\n    <Styled.Toggle onClick={() => navigate(handleNavigate)}>\r\n      {text}\r\n    </Styled.Toggle>\r\n  );\r\n};\r\n\r\nexport default Toggle;\r\n","import { Styled } from './style';\r\n\r\nimport Input from 'components/layout/public/Input';\r\nimport Button from '../Button';\r\nimport Toggle from '../Toggle';\r\n\r\nconst Form = ({ data }) => {\r\n  const { title, inputs, buttonData, toggleData } = data;\r\n  return (\r\n    <Styled.Form>\r\n      <Styled.Title>{title}</Styled.Title>\r\n      {Object.values(inputs).map((input) => (\r\n        <Input key={input.id} InputData={input} />\r\n      ))}\r\n      <Button ButtonData={buttonData} />\r\n      <Toggle ToggleData={toggleData} />\r\n    </Styled.Form>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","export const deepFreeze = (obj) => {\r\n  Object.keys(obj).forEach((prop) => {\r\n    if (typeof obj[prop] === 'object' && !Object.isFrozen(obj[prop])) {\r\n      deepFreeze(obj[prop]);\r\n    }\r\n  });\r\n  return Object.freeze(obj);\r\n};\r\n","import { deepFreeze } from 'utils/deepFreeze';\r\n\r\nexport const Message = deepFreeze({\r\n  process: {\r\n    success: '성공적으로 처리되었습니다.',\r\n    fail: '처리에 실패하였습니다.',\r\n  },\r\n  error: {\r\n    required: '필수 입력값입니다.',\r\n    invalid: '올바르지 않은 값입니다.',\r\n    invalidEmail: '올바르지 않은 이메일 형식입니다.',\r\n    invalidPassword: '올바르지 않은 비밀번호 형식입니다.',\r\n    invalidPasswordConfirm: '비밀번호가 일치하지 않습니다.',\r\n  },\r\n});\r\n","import { useEffect } from 'react';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\n\r\nconst useRedirect = () => {\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const accessToken = localStorage.getItem('access_token');\r\n\r\n  useEffect(() => {\r\n    if (accessToken === null && location.pathname === '/todo')\r\n      return navigate('/');\r\n    if (accessToken !== null && location.pathname !== '/todo')\r\n      return navigate('/todo');\r\n  }, []);\r\n};\r\n\r\nexport default useRedirect;\r\n","import { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { signUpApi } from 'apis/sign';\r\nimport useRedirect from 'hooks/useRedirect';\r\nimport { handleError } from 'utils/handleError';\r\n\r\nimport Form from 'components/layout/sign/Form';\r\nimport Validator from 'utils/Validator';\r\nimport { Message } from 'constants/Message';\r\n\r\nconst Container = styled.div`\r\n  position: relative;\r\n  width: 500px;\r\n  height: 450px;\r\n  margin: 50px auto;\r\n  box-shadow: 0px 0px 10px 0px rgba(0, 0, 0, 0.2);\r\n  border-radius: 20px;\r\n`;\r\n\r\nconst Join = () => {\r\n  useRedirect();\r\n  const navigate = useNavigate();\r\n  const [userData, setUserDate] = useState({\r\n    email: '',\r\n    password: '',\r\n  });\r\n\r\n  const onChangeEmail = (e) => {\r\n    setUserDate({ ...userData, email: e.target.value });\r\n  };\r\n\r\n  const onChangePassword = (e) => {\r\n    setUserDate({ ...userData, password: e.target.value });\r\n  };\r\n\r\n  const handleSignUp = (e, userData) => {\r\n    e.preventDefault();\r\n    if (\r\n      Validator.isValidEmail(userData.email) &&\r\n      Validator.isValidPassword(userData.password)\r\n    ) {\r\n      signUpApi(userData)\r\n        .then(() => {\r\n          handleSuccess();\r\n        })\r\n        .catch(() => {\r\n          handleError(Message.process.fail);\r\n        });\r\n    }\r\n  };\r\n\r\n  const handleSuccess = () => {\r\n    alert(Message.process.success);\r\n    navigate('/signin');\r\n  };\r\n\r\n  const joinData = {\r\n    title: '회원가입',\r\n    inputs: {\r\n      email: {\r\n        id: 1,\r\n        type: 'text',\r\n        placeholder: '이메일',\r\n        testId: 'email-input',\r\n        onChange: onChangeEmail,\r\n      },\r\n      password: {\r\n        id: 2,\r\n        type: 'password',\r\n        placeholder: '비밀번호',\r\n        testId: 'password-input',\r\n        autoComplete: 'off',\r\n        onChange: onChangePassword,\r\n      },\r\n    },\r\n    buttonData: {\r\n      text: '가입하기',\r\n      testId: 'signup-button',\r\n      userData: userData,\r\n      handleClick: handleSignUp,\r\n    },\r\n    toggleData: {\r\n      text: '이미 회원이신가요? 로그인',\r\n      handleNavigate: '/signin',\r\n    },\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Form data={joinData} />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Join;\r\n","export default function _classPrivateFieldBase(receiver, privateKey) {\n  if (!Object.prototype.hasOwnProperty.call(receiver, privateKey)) {\n    throw new TypeError(\"attempted to use private field on non-instance\");\n  }\n  return receiver;\n}","var id = 0;\nexport default function _classPrivateFieldKey(name) {\n  return \"__private_\" + id++ + \"_\" + name;\n}","import { handleError } from './handleError';\r\nimport { Message } from 'constants/Message';\r\n\r\nexport default class Validator {\r\n  static #validate(condition, errorMsg) {\r\n    if (condition) {\r\n      return true;\r\n    }\r\n\r\n    return handleError(errorMsg);\r\n  }\r\n\r\n  static isValidEmail(value) {\r\n    return this.#validate(\r\n      this.hasEmailAtSign(value),\r\n      Message.error.invalidEmail,\r\n    );\r\n  }\r\n\r\n  static isValidPassword(value) {\r\n    return this.#validate(\r\n      this.hasPasswordMinimumLength(value),\r\n      Message.error.invalidPassword,\r\n    );\r\n  }\r\n\r\n  static hasEmailAtSign(value) {\r\n    return value.includes('@');\r\n  }\r\n\r\n  static hasPasswordMinimumLength(value) {\r\n    return value.length >= 8;\r\n  }\r\n}\r\n","export const handleError = error => {\r\n  try {\r\n    throw new Error(error);\r\n  } catch (error) {\r\n    alert(error.message);\r\n    return false;\r\n  }\r\n};"],"names":["signInApi","email","password","userClient","signUpApi","axios","baseURL","process","headers","interceptors","request","use","config","accessToken","localStorage","getItem","Styled","Input","styled","InputData","type","placeholder","testId","onChange","autoComplete","defaultValue","inputRef","ref","Form","Title","Button","ButtonData","text","handleClick","userData","useState","active","setActive","useEffect","Validator","onClick","e","disabled","Toggle","ToggleData","handleNavigate","navigate","useNavigate","data","title","inputs","buttonData","toggleData","Object","values","map","input","id","Message","deepFreeze","obj","keys","forEach","prop","isFrozen","freeze","success","fail","error","required","invalid","invalidEmail","invalidPassword","invalidPasswordConfirm","location","useLocation","pathname","Container","useRedirect","setUserDate","handleSuccess","alert","joinData","target","value","preventDefault","then","catch","handleError","_classPrivateFieldBase","receiver","privateKey","prototype","hasOwnProperty","call","TypeError","_classPrivateFieldKey","name","this","hasEmailAtSign","hasPasswordMinimumLength","includes","length","condition","errorMsg","Error","message"],"sourceRoot":""}